@import './variables';

// reset
* {
  box-sizing: border-box;
  outline: none; // 不高亮显示
}

html {
  font-size: 13px; // 定义网站的基本字体尺寸
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background-color: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}

a {
  color: #999;
}

p {
  line-height: 1.5em;
}

// text color
@each $colorKey,
$color in $colors {

  // 根据已有的颜色生成文字颜色的工具类
  .text-#{$colorKey} {
    color: $color;
  }

  // 根据已有的颜色生成背景颜色的工具类
  .bg-#{$colorKey} {
    background-color: $color;
  }
}

// text align
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var  !important;
  }
}

@each $sizeKey,
$size in $font-sizes {

  // 根据已有的字体大小生成字体尺寸的工具类
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

// text overflow
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// width, height
.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
}

/**
 * 使用助手工具类实现flex布局(主轴$flex-jc和交叉轴$flex-ai的对齐方式)
 * 默认水平方向(flex-direction:row)，$flex-jc表示水平方向的对齐方式，$flex-ai表示垂直方向的对齐方式
 * 垂直方向(flex-direction:column)，$flex-jc表示垂直方向的对齐方式，$flex-ai表示水平方向的对齐方式
*/
.d-flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

// 使用flex布局，里面的所有元素默认都会挤在一行，加上flex-wrap让其换行
.flex-wrap {
  flex-wrap: wrap;
}

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key,
$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

// 简写方式：左边和右边固定，占据剩余空间，自动拉伸撑满
.flex-1 {
  flex: 1; // 表示shrink和grow都是1
}

// 完整方式：左边和右边固定，占据剩余空间，自动拉伸撑满
.flex-grow-1 {
  flex-grow: 1;
}

// 嵌套循环
@each $typeKey,
$type in $spacing-types {

  // .m-1 {margin: 0.25rem}的形式
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $base-spacing-size;
    }
  }

  // .mx-1和.my-1
  @each $sizeKey,
  $size in $spacing-sizes {

    // .mx-1表示水平方向左右保持一致
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $base-spacing-size;
      #{$type}-right: $size * $base-spacing-size;
    }

    // .my-1表示垂直方向上下保持一致
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $base-spacing-size;
      #{$type}-bottom: $size * $base-spacing-size;
    }
  }

  // .mt-1 {margin-top: 0.25rem}的形式，三层嵌套循环
  @each $directionKey,
  $direction in $spacing-directions {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $base-spacing-size;
      }
    }
  }
}

// button
.btn {
  border: none;
  border-radius: .1538rem;
  // map-get是上面定义的一个map，变量是$font-sizes，键是sm
  font-size: map-get($font-sizes, 'sm') * $base-font-size;
  padding: 0.2rem 0.6rem;
}

// nav
.nav {
  display: flex;

  .nav-item {
    border-bottom: .2308rem solid transparent; // 透明的
    padding-bottom: 0.2rem;

    &.active {
      color: map-get($colors, 'primary');
      border-bottom-color: map-get($colors, 'primary');
    }
  }

  &.nav-inverse {
    .nav-item {
      color: map-get($colors, 'white');

      &.active {
        border-bottom-color: map-get($colors, 'white');
      }
    }
  }
}

// sprite
.sprite {
  background: url(../images/index.png) no-repeat 0 0;
  background-size: 28.8462rem;
  display: inline-block;

  &.sprite-news {
    width: 1.7692rem;
    height: 1.5385rem;
    background-position: 63.546% 15.517%;
  }

  &.sprite-arrow {
    width: .7692rem;
    height: .7692rem;
    background-position: 38.577% 52.076%;
  }
}

// border
@each $dir in (top, right, bottom, left) {
  .border-#{$dir} {
    border-#{$dir}: .0769rem solid $border-color;
  }
}